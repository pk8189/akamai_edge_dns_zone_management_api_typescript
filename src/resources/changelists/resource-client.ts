/**
 * File Generated by Sideko (sideko.dev)
 */
import {
  CoreResourceClient,
  CoreClient,
  RequestOptions,
  ApiPromise,
} from "akamai_edge_dns_zone_management_api/core";
import { DiffClient } from "akamai_edge_dns_zone_management_api/resources/changelists/diff";
import { NamesClient } from "akamai_edge_dns_zone_management_api/resources/changelists/names";
import { RecordsetsClient } from "akamai_edge_dns_zone_management_api/resources/changelists/recordsets";
import { SettingsClient } from "akamai_edge_dns_zone_management_api/resources/changelists/settings";
import { SearchClient } from "akamai_edge_dns_zone_management_api/resources/changelists/search";
import { SubmitClient } from "akamai_edge_dns_zone_management_api/resources/changelists/submit";
import * as requests from "akamai_edge_dns_zone_management_api/resources/changelists/request-types";
import qs from "qs";
import * as types from "akamai_edge_dns_zone_management_api/types";

export class ChangelistsClient extends CoreResourceClient {
  // register resources (keep comment for code generation)
  diff: DiffClient;
  names: NamesClient;
  recordsets: RecordsetsClient;
  settings: SettingsClient;
  search: SearchClient;
  submit: SubmitClient;

  constructor(client: CoreClient) {
    super(client);

    // init resources (keep comment for code generation)
    this.diff = new DiffClient(this._client);
    this.names = new NamesClient(this._client);
    this.recordsets = new RecordsetsClient(this._client);
    this.settings = new SettingsClient(this._client);
    this.search = new SearchClient(this._client);
    this.submit = new SubmitClient(this._client);
  }

  // register api methods (keep comment for code generation)

  /**
   * Creates a new Change List based on the most recent version of a zone. No POST body is needed, since the object is read-only.
   */
  create(
    request: requests.CreateRequest,
    opts?: RequestOptions,
  ): ApiPromise<types.PostChangelistsResponse> {
    // send request (keep comment for code generation)
    return this._client.makeRequest({
      method: "post",
      path: "/changelists",
      query: [
        qs.stringify({ zone: request.zone }),
        qs.stringify({ accountSwitchKey: request.accountSwitchKey }),
        qs.stringify({ overwrite: request.overwrite }),
      ],
      responseType: "json",
      opts,
    });
  }

  /**
   * Describes a Change List, showing its base zone version, last modified time, and current change tag.
   */
  get(
    request: requests.GetRequest,
    opts?: RequestOptions,
  ): ApiPromise<types.GetChangelistsZoneResponse> {
    // send request (keep comment for code generation)
    return this._client.makeRequest({
      method: "get",
      path: `/changelists/${request.zone}`,
      query: [qs.stringify({ accountSwitchKey: request.accountSwitchKey })],
      responseType: "json",
      opts,
    });
  }

  /**
   * Retrieves the Change Lists that you created. Otherwise, displays both stale change lists and change lists for zones you can no longer access.
   */
  list(
    request: requests.ListRequest,
    opts?: RequestOptions,
  ): ApiPromise<types.GetChangelistsResponse> {
    // send request (keep comment for code generation)
    return this._client.makeRequest({
      method: "get",
      path: "/changelists",
      query: [qs.stringify({ accountSwitchKey: request.accountSwitchKey })],
      responseType: "json",
      opts,
    });
  }

  /**
   * Removes an unneeded Change List.
   */
  delete(
    request: requests.DeleteRequest,
    opts?: RequestOptions,
  ): ApiPromise<null> {
    // send request (keep comment for code generation)
    return this._client.makeRequest({
      method: "delete",
      path: `/changelists/${request.zone}`,
      query: [qs.stringify({ accountSwitchKey: request.accountSwitchKey })],
      responseType: "json",
      opts,
    });
  }
}
