/**
 * File Generated by Sideko (sideko.dev)
 */
import {
  CoreResourceClient,
  CoreClient,
  RequestOptions,
  ApiPromise,
} from "akamai_edge_dns_zone_management_api/core";
import * as requests from "akamai_edge_dns_zone_management_api/resources/zones/zone-file/request-types";
import qs from "qs";

export class ZoneFileClient extends CoreResourceClient {
  // register resources (keep comment for code generation)

  constructor(client: CoreClient) {
    super(client);

    // init resources (keep comment for code generation)
  }

  // register api methods (keep comment for code generation)

  /**
   * Upload new record set data for this zone in master zone file format. Replaces any existing record sets. This operation applies to primary zones and secondary zones. See [RFC 1035](http://tools.ietf.org/html/rfc1035) section 5 and [RFC 1034](http://tools.ietf.org/html/rfc1034) section 3.6.1 for more information.  Zone files can contain only US-ASCII characters 0&ndash;127. Where allowed, you can encode high-order ASCII characters, 128+, with a backslash plus a three-digit decimal number representing the byte value. For example, `\233` instead of `&eacute;`.  `AKAMAICDN` and `AKAMAITLC` records can't be represented in this format. Uploading a zone file does not affect these records.
   */
  create(
    request: requests.CreateRequest,
    opts?: RequestOptions,
  ): ApiPromise<null> {
    // send request (keep comment for code generation)
    return this._client.makeRequest({
      method: "post",
      path: `/zones/${request.zone}/zone-file`,
      query: [qs.stringify({ accountSwitchKey: request.accountSwitchKey })],
      contentType: "text/dns",
      body: request.data,
      responseType: "json",
      opts,
    });
  }

  /**
   * Download this zone's record set data in master zone file format. This operation applies to primary zones and secondary zones. See [RFC 1035](http://tools.ietf.org/html/rfc1035) section 5 and [RFC 1034](http://tools.ietf.org/html/rfc1034) section 3.6.1 for more information.  `AKAMAICDN` and `AKAMAITLC` records can't be represented in this format, so they are displayed as comment lines.
   */
  list(request: requests.ListRequest, opts?: RequestOptions): ApiPromise<null> {
    // send request (keep comment for code generation)
    return this._client.makeRequest({
      method: "get",
      path: `/zones/${request.zone}/zone-file`,
      query: [qs.stringify({ accountSwitchKey: request.accountSwitchKey })],
      responseType: "json",
      opts,
    });
  }
}
