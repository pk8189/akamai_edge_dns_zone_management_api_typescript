/**
 * File Generated by Sideko (sideko.dev)
 */
import {
  CoreResourceClient,
  CoreClient,
  RequestOptions,
  ApiPromise,
} from "akamai_edge_dns_zone_management_api/core";
import * as requests from "akamai_edge_dns_zone_management_api/resources/zones/names/types/request-types";
import qs from "qs";
import * as types from "akamai_edge_dns_zone_management_api/types";

export class TypesClient extends CoreResourceClient {
  // register resources (keep comment for code generation)

  constructor(client: CoreClient) {
    super(client);

    // init resources (keep comment for code generation)
  }

  // register api methods (keep comment for code generation)

  /**
   * Replaces an existing Record set with the request body. The `name` and `type` need to match the existing record.
   */
  put(
    request: requests.PutRequest,
    opts?: RequestOptions,
  ): ApiPromise<types.PutZonesZoneNamesNameTypesTypeResponse> {
    // send request (keep comment for code generation)
    return this._client.makeRequest({
      method: "put",
      path: `/zones/${request.zone}/names/${request.name}/types/${request.typePath}`,
      query: [qs.stringify({ accountSwitchKey: request.accountSwitchKey })],
      contentType: "application/json",
      body: request.data,
      responseType: "json",
      opts,
    });
  }

  /**
   * Creates a new Record set with the specified name and type.
   */
  create(
    request: requests.CreateRequest,
    opts?: RequestOptions,
  ): ApiPromise<types.PostZonesZoneNamesNameTypesTypeResponse> {
    // send request (keep comment for code generation)
    return this._client.makeRequest({
      method: "post",
      path: `/zones/${request.zone}/names/${request.name}/types/${request.typePath}`,
      query: [qs.stringify({ accountSwitchKey: request.accountSwitchKey })],
      contentType: "application/json",
      body: request.data,
      responseType: "json",
      opts,
    });
  }

  /**
   * Retrieves a single record set for the zone, record name, and record type specified in the URL.
   */
  get(
    request: requests.GetRequest,
    opts?: RequestOptions,
  ): ApiPromise<types.GetZonesZoneNamesNameTypesTypeResponse> {
    // send request (keep comment for code generation)
    return this._client.makeRequest({
      method: "get",
      path: `/zones/${request.zone}/names/${request.name}/types/${request.typePath}`,
      query: [qs.stringify({ accountSwitchKey: request.accountSwitchKey })],
      responseType: "json",
      opts,
    });
  }

  /**
   * Lists all *existing* Record set types for this name. The list of *allowed* types is available at [List record types](https://techdocs.akamai.com/edge-dns/reference/get-record-set-types). If the name does not exist within the zone, an empty list is returned.
   */
  list(
    request: requests.ListRequest,
    opts?: RequestOptions,
  ): ApiPromise<types.GetZonesZoneNamesNameTypesResponse> {
    // send request (keep comment for code generation)
    return this._client.makeRequest({
      method: "get",
      path: `/zones/${request.zone}/names/${request.name}/types`,
      query: [qs.stringify({ accountSwitchKey: request.accountSwitchKey })],
      responseType: "json",
      opts,
    });
  }

  /**
   * Removes an existing record set.
   */
  delete(
    request: requests.DeleteRequest,
    opts?: RequestOptions,
  ): ApiPromise<null> {
    // send request (keep comment for code generation)
    return this._client.makeRequest({
      method: "delete",
      path: `/zones/${request.zone}/names/${request.name}/types/${request.typePath}`,
      query: [qs.stringify({ accountSwitchKey: request.accountSwitchKey })],
      responseType: "json",
      opts,
    });
  }
}
