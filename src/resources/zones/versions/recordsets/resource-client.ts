/**
 * File Generated by Sideko (sideko.dev)
 */
import {
  CoreResourceClient,
  CoreClient,
  RequestOptions,
  ApiPromise,
} from "akamai_edge_dns_zone_management_api/core";
import { ActivateClient } from "akamai_edge_dns_zone_management_api/resources/zones/versions/recordsets/activate";
import * as requests from "akamai_edge_dns_zone_management_api/resources/zones/versions/recordsets/request-types";
import * as types from "akamai_edge_dns_zone_management_api/types";
import qs from "qs";

export class RecordsetsClient extends CoreResourceClient {
  // register resources (keep comment for code generation)
  activate: ActivateClient;

  constructor(client: CoreClient) {
    super(client);

    // init resources (keep comment for code generation)
    this.activate = new ActivateClient(this._client);
  }

  // register api methods (keep comment for code generation)

  /**
   * Lists all record sets for this version of this zone. This operation is [paginated](https://techdocs.akamai.com/edge-dns/reference/use-pagination).
   */
  list(
    request: requests.ListRequest,
    opts?: RequestOptions,
  ): ApiPromise<types.GetZonesZoneVersionsUuidRecordsetsResponse> {
    // send request (keep comment for code generation)
    return this._client.makeRequest({
      method: "get",
      path: `/zones/${request.zone}/versions/${request.uuid}/recordsets`,
      query: [
        qs.stringify({ accountSwitchKey: request.accountSwitchKey }),
        qs.stringify({ page: request.page }),
        qs.stringify({ pageSize: request.pageSize }),
        qs.stringify({ search: request.search }),
        qs.stringify({ showAll: request.showAll }),
        qs.stringify({ sortBy: request.sortBy }),
        qs.stringify({ types: request.types }),
      ],
      responseType: "json",
      opts,
    });
  }
}
